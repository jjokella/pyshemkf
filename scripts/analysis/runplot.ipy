# import shutil
import matplotlib.pyplot as plt

from pskf.tools.plot import specs as sc
import pskf.scripts.analysis.arrays as aa
import pskf.scripts.analysis.plot as ap
import pskf.scripts.analysis.read as ar
import pskf.tools.run.pythonmodule as pm
import pskf.tools.plot.plotfunctions as pf

import numpy as np

# Switches
is_read = 1
is_plot = 1
is_save = 0
is_show = 1
is_backup = 0

# Specs
model_name = 'model'
dat = '2010_01_30'
let = 'a'

# Letters of wanted range
lets = [let]  # aa.lets[sc.specl(model_name, dat, let)]

varname = 'kz_mean'

nt = 10

# Read
if is_read:
    numpy_array, numpy_array_name = ar.read(
        model_name, dat, lets[0], varname=varname, nt=nt, befaft='aft')
    np.save(numpy_array_name, numpy_array)
    print('Saved as ' + numpy_array_name)

# Plot
if is_plot:

    # Figure
    fig = plt.figure(1, figsize=[15, 10])

    # Run plot function
    ax, pic_name = ap.plot(
        fig.add_subplot(1, 1, 1),
        model_name,
        dat,
        lets[0],
        nt=nt,
        diff_ticks=2,
        num_cbar=15,
        pic_format='png',
        varname=varname,
    )

    # Colorbar
    cb_ax = pf.cb(fig.add_subplot(1, 2, 1), ax)

    # Monitoring points
    ax = pf.scatter(
        ax,
        model_name,
        dat,
        let,
    )

    # Save
    if is_save:
        plt.savefig(pic_name)
        print('Saved as ' + pic_name)

    # Show
    if is_show:
        plt.show()
    else:
        plt.clf()

# Backup
if is_backup:
    pm.py_backup(pm.python_scripts_dir, aa.tag, "runplot", "ipy",
                 sc.specl(model_name, dat, lets[0]))
